# Node.js
node_modules/
npm-debug.log
yarn-error.log
yarn-debug.log
.pnpm-debug.log
.npm
.yarn

# Build
/dist/
/build/
/out/
/.next/
/nuxt/
/.nuxt/
/vercel

# Logs
*.log
logs
*.log.*

# Testing
/coverage/
/.nyc_output/
.nyc_output
.jest/
.jest-test-results.json

# IDE
.idea/
*.swp
*.swo
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
.history
*.ion

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Misc
.DS_Store
*.pem

# Editor directories and files
.happypack/
.tern-project
.next
.nuxt
.cache
coverage
dist
.nyc_output
.sass-cache
.serverless
.serverless_plugins
.tmp
.tmp.*
.trash
.webpack
.webpack-test
.nuxt
.nyc_output
coverage
dist
build
out
.eslintcache
.stylelintcache
*.sublime-project
*.sublime-workspace
.vscode
node_modules
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.DS_Store
.env.local
.env
.vercel
*.seed
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.nyc_output
coverage
.nyc_output
.coverage
.reports
dist
build
.next
out
.cache
.happypack
.webpack
.tmp
.trash
.sass-cache
.serverless
.serverless_plugins
.nuxt
.eslintcache
.stylelintcache
.DS_Store
.vercel
*.seed
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.nyc_output
coverage
.nyc_output
.coverage
.reports
dist
build
.next
out
.cache
.happypack
.webpack
.tmp
.trash
.sass-cache
.serverless
.serverless_plugins
.nuxt
.eslintcache
.stylelintcache
.DS_Store
.vercel
*.seed
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.nyc_output
coverage
.nyc_output
.coverage
.reports
dist
build
.next
out
.cache
.happypack
.webpack
.tmp
.trash
.sass-cache
.serverless
.serverless_plugins
.nuxt
.eslintcache
.stylelintcache
.DS_Store
.vercel
*.seed
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.nyc_output
coverage
.nyc_output
.coverage
.reports
dist
build
.next
out
.cache
.happypack
.webpack
.tmp
.trash
.sass-cache
.serverless
.serverless_plugins
.nuxt
.eslintcache
.stylelintcache
.DS_Store
.vercel
*.seed
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.nyc_output
coverage
.nyc_output
.coverage
.reports
dist
build
.next
out
.cache
.happypack
.webpack
.tmp
.trash
.sass-cache
.serverless
.serverless_plugins
.nuxt
.eslintcache
.stylelintcache
.DS_Store
.vercel
*.seed
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.nyc_output
coverage
.nyc_output
.coverage
.reports
dist
build
.next
out
.cache
.happypack
.webpack
.tmp
.trash
.sass-cache
.serverless
.serverless_plugins
.nuxt
.eslintcache
.stylelintcache
.DS_Store
.vercel
*.seed
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
......
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile but exclude
#   Pipfile.lock in version control. However, you may have a compelling reason to
#   include your Pipfile.lock in version control. For example:
#   1. You have a CI/CD pipeline that continuously deploys using pipenv --deploy.
#   2. You want your environment to be deterministic and easily reproducible for all
#      development environments, including CI/CD.
#   3. You want to commit to a particular version of your dependencies to prevent
#      automatic upgrades that might introduce breaking changes.
#   4. You have reviewed all the dependencies and decided to commit to this specific
#      state of your environment.
#   5. You are deploying to a platform that requires a lock file for deployment.
#   See: https://github.com/pypa/pipenv/issues/598
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in
#   version control for the same reasons as mentioned above for Pipfile.lock.
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in
#   version control for the same reasons as mentioned above for Pipfile.lock.
#pdm.lock
#pdm-debug.log

# PDM build artifacts
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) uncomment the following to ignore the entire idea folder.
#.idea/

# Darwin desktop services
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
.AppleDouble
.LSOverride
.Icon
._Icon
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
apdisk

# Windows
.DS_Store?
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
Desktop.ini
::?$
*.tmp
*~
*.log
*.cache
*.tsbuildinfo
.DS_Store

# Linux
*~

# Editor swap files
*.swp
*.swo

# Temporary files
tmp/
temp/
*.tmp
*.temp

# IDE specific files
.vs/
.vscode/
*.suo
*.user
*.userosscache
*.sln.docstates

# Compiled files
*.exe
*.dll
*.so
*.dylib

# Package files
*.zip
*.tar.gz
*.7z
*.rar
*.tgz
*.dmg

# Logs and databases
*.log
*.sql
*.sqlite

# Environment files
.env.local
.env
.env.development
.env.production

# Testing
coverage/
.nyc_output/
test-results.xml

# Build outputs
dist/
out/
build/
.next/
.nuxt/
.vercel/

# Dependency directories
node_modules/
jspm_packages/
bower_components/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# IDE - VS Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Local History for Visual Studio Code
.history/

# Console log files
logs
*.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
jspm_packages/
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Typescript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# IDE - VS Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Local History for Visual Studio Code
.history/

# Console log files
logs
*.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
jspm_packages/
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Typescript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# IDE - VS Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Local History for Visual Studio Code
.history/

# Console log files
logs
*.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
jspm_packages/
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Typescript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# IDE - VS Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Local History for Visual Studio Code
.history/

# Console log files
logs
*.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
jspm_packages/
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Typescript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# IDE - VS Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Local History for Visual Studio Code
.history/

# Console log files
logs
*.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
jspm_packages/
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Typescript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# IDE - VS Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Local History for Visual Studio Code
.history/

# Console log files
logs
*.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
jspm_packages/
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Typescript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# IDE - VS Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Local History for Visual Studio Code
.history/

# Console log files
logs
*.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output......
